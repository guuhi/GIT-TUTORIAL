git = version history of code, like version history of google docs

command line:
ls
cd

to setup git or create a version in a folder:
from commandline: - go to folder directory
                  - git innit 

some commands are in the pdf!

git status - to check the status, how many commits are there
git add [file/folder]
git add . - to add all that is in the cd (does not create a new version yet)

version = commit

git commmit -m ""
            m = message

git commit -m "" --amend - commit the changes but to the previous commit (when there is a mistake)

git log - to see the version history
commit d51f22c62b4803b4d011016afba0b2cbc6449262 (HEAD -> master)
Author: guuhi <winterlab04@gmail.com>
Date:   Mon Apr 29 21:30:07 2024 +0700

    Version 1

git log --all - to see ALL the version history

staging area = changes here will go in the next version, already git add
below is the working area = changes that is not git add -ed yet, so it will not go to the next version

CAN APPEAR IN BOTH PLACES because what git tracks is the changes not files.

in staged areas
git reset [file/folder] - so to make the changes in the working area
git reset .

can reset also in our changing area/working areas (so it will reset all the changes)
git checkout -- [file/folder]
git checkout .

git checkout [commit hash] - to go back to prevous version
git checkout master or name

git log --all --graph - to see the branch